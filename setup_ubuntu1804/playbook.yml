#################################################
# DO Community Playbooks: Initial Server Setup
#################################################
---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install Prerequisites
      apt: name=aptitude update_cache=yes state=latest force_apt_get=yes

# Sudo Group Setup
    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

# User + Key Setup
    - name: Create a new regular user with sudo privileges
      user:
        name: "{{ create_user }}"
        state: present
        groups: wheel
        append: true
        create_home: true
        shell: /bin/bash

    - name: Set authorized key for remote user
      authorized_key:
        user: deploy
        state: present
        key: '{{ item }}'
      with_file:
        - public_keys/zek_mba.pub
        - public_keys/zek_windows.pub
        - public_keys/joeheng.pub
        - public_keys/joeheng_macmini.pub

    - name: Disable password authentication for root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'

# Unattended upgrades
  roles:
    - role: jnv.unattended-upgrades
      unattended_origins_patterns:
      - 'origin=Ubuntu,archive=${distro_codename}-security'
      - 'o=Ubuntu,a=${distro_codename}'
      - 'o=Ubuntu,a=${distro_codename}-updates'
      unattended_automatic_reboot: true
      unattended_automatic_reboot_time: 15:30
      unattended_mail: "{{ unattended_upgrades_email }}"

# # Install Packages
#     - name: Update apt
#       apt: update_cache=yes

#     - name: Install required system packages
#       apt: name={{ sys_packages }} state=latest

# # UFW Setup
#     - name: UFW - Allow SSH connections
#       ufw:
#         rule: allow
#         name: OpenSSH

#     - name: UFW - Deny all other incoming traffic by default
#       ufw:
#         state: enabled
#         policy: deny
#         direction: incoming
